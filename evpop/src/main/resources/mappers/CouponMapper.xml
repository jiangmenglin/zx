<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zx.evpop.jdbc.dao.CouponMapper" >
  <resultMap id="BaseResultMap" type="com.zx.evpop.jdbc.entity.Coupon" >
    <id column="tbc_id" property="tbcId" jdbcType="INTEGER" />
    <result column="tbc_host" property="tbcHost" jdbcType="SMALLINT" />
    <result column="tbc_title" property="tbcTitle" jdbcType="VARCHAR" />
    <result column="tbc_member" property="tbcMember" jdbcType="INTEGER" />
    <result column="tbc_limit" property="tbcLimit" jdbcType="TINYINT" />
    <result column="tbc_min" property="tbcMin" jdbcType="DECIMAL" />
    <result column="tbc_type" property="tbcType" jdbcType="INTEGER" />
    <result column="tbc_flag" property="tbcFlag" jdbcType="VARCHAR" />
    <result column="tbc_count" property="tbcCount" jdbcType="DOUBLE" />
    <result column="tbc_validity" property="tbcValidity" jdbcType="TINYINT" />
    <result column="tbc_begin" property="tbcBegin" jdbcType="TIMESTAMP" />
    <result column="tbc_end" property="tbcEnd" jdbcType="TIMESTAMP" />
    <result column="tbc_use_time" property="tbcUseTime" jdbcType="TIMESTAMP" />
    <result column="tbc_serial" property="tbcSerial" jdbcType="VARCHAR" />
    <result column="tbc_order" property="tbcOrder" jdbcType="BIGINT" />
    <result column="tbc_long_order" property="tbcLongOrder" jdbcType="BIGINT" />
    <result column="tbc_data" property="tbcData" jdbcType="VARCHAR" />
    <result column="tbc_editor" property="tbcEditor" jdbcType="INTEGER" />
    <result column="tbc_update_time" property="tbcUpdateTime" jdbcType="TIMESTAMP" />
    <result column="tbc_add_time" property="tbcAddTime" jdbcType="TIMESTAMP" />
    <result column="tbc_remark" property="tbcRemark" jdbcType="VARCHAR" />
    <result column="tbc_timeout" property="tbcTimeout" jdbcType="TINYINT" />
    <result column="tbc_used" property="tbcUsed" jdbcType="TINYINT" />
    <result column="tbc_status" property="tbcStatus" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tbc_id, tbc_host, tbc_title, tbc_member, tbc_limit, tbc_min, tbc_type, tbc_flag, 
    tbc_count, tbc_validity, tbc_begin, tbc_end, tbc_use_time, tbc_serial, tbc_order, 
    tbc_long_order, tbc_data, tbc_editor, tbc_update_time, tbc_add_time, tbc_remark, 
    tbc_timeout, tbc_used, tbc_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zx.evpop.jdbc.entity.CouponExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_coupon
    where tbc_id = #{tbcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_coupon
    where tbc_id = #{tbcId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zx.evpop.jdbc.entity.Coupon" >
    insert into tb_coupon (tbc_id, tbc_host, tbc_title, 
      tbc_member, tbc_limit, tbc_min, 
      tbc_type, tbc_flag, tbc_count, 
      tbc_validity, tbc_begin, tbc_end, 
      tbc_use_time, tbc_serial, tbc_order, 
      tbc_long_order, tbc_data, tbc_editor, 
      tbc_update_time, tbc_add_time, tbc_remark, 
      tbc_timeout, tbc_used, tbc_status
      )
    values (#{tbcId,jdbcType=INTEGER}, #{tbcHost,jdbcType=SMALLINT}, #{tbcTitle,jdbcType=VARCHAR}, 
      #{tbcMember,jdbcType=INTEGER}, #{tbcLimit,jdbcType=TINYINT}, #{tbcMin,jdbcType=DECIMAL}, 
      #{tbcType,jdbcType=INTEGER}, #{tbcFlag,jdbcType=VARCHAR}, #{tbcCount,jdbcType=DOUBLE}, 
      #{tbcValidity,jdbcType=TINYINT}, #{tbcBegin,jdbcType=TIMESTAMP}, #{tbcEnd,jdbcType=TIMESTAMP}, 
      #{tbcUseTime,jdbcType=TIMESTAMP}, #{tbcSerial,jdbcType=VARCHAR}, #{tbcOrder,jdbcType=BIGINT}, 
      #{tbcLongOrder,jdbcType=BIGINT}, #{tbcData,jdbcType=VARCHAR}, #{tbcEditor,jdbcType=INTEGER}, 
      #{tbcUpdateTime,jdbcType=TIMESTAMP}, #{tbcAddTime,jdbcType=TIMESTAMP}, #{tbcRemark,jdbcType=VARCHAR}, 
      #{tbcTimeout,jdbcType=TINYINT}, #{tbcUsed,jdbcType=TINYINT}, #{tbcStatus,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zx.evpop.jdbc.entity.Coupon" >
    insert into tb_coupon
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tbcId != null" >
        tbc_id,
      </if>
      <if test="tbcHost != null" >
        tbc_host,
      </if>
      <if test="tbcTitle != null" >
        tbc_title,
      </if>
      <if test="tbcMember != null" >
        tbc_member,
      </if>
      <if test="tbcLimit != null" >
        tbc_limit,
      </if>
      <if test="tbcMin != null" >
        tbc_min,
      </if>
      <if test="tbcType != null" >
        tbc_type,
      </if>
      <if test="tbcFlag != null" >
        tbc_flag,
      </if>
      <if test="tbcCount != null" >
        tbc_count,
      </if>
      <if test="tbcValidity != null" >
        tbc_validity,
      </if>
      <if test="tbcBegin != null" >
        tbc_begin,
      </if>
      <if test="tbcEnd != null" >
        tbc_end,
      </if>
      <if test="tbcUseTime != null" >
        tbc_use_time,
      </if>
      <if test="tbcSerial != null" >
        tbc_serial,
      </if>
      <if test="tbcOrder != null" >
        tbc_order,
      </if>
      <if test="tbcLongOrder != null" >
        tbc_long_order,
      </if>
      <if test="tbcData != null" >
        tbc_data,
      </if>
      <if test="tbcEditor != null" >
        tbc_editor,
      </if>
      <if test="tbcUpdateTime != null" >
        tbc_update_time,
      </if>
      <if test="tbcAddTime != null" >
        tbc_add_time,
      </if>
      <if test="tbcRemark != null" >
        tbc_remark,
      </if>
      <if test="tbcTimeout != null" >
        tbc_timeout,
      </if>
      <if test="tbcUsed != null" >
        tbc_used,
      </if>
      <if test="tbcStatus != null" >
        tbc_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tbcId != null" >
        #{tbcId,jdbcType=INTEGER},
      </if>
      <if test="tbcHost != null" >
        #{tbcHost,jdbcType=SMALLINT},
      </if>
      <if test="tbcTitle != null" >
        #{tbcTitle,jdbcType=VARCHAR},
      </if>
      <if test="tbcMember != null" >
        #{tbcMember,jdbcType=INTEGER},
      </if>
      <if test="tbcLimit != null" >
        #{tbcLimit,jdbcType=TINYINT},
      </if>
      <if test="tbcMin != null" >
        #{tbcMin,jdbcType=DECIMAL},
      </if>
      <if test="tbcType != null" >
        #{tbcType,jdbcType=INTEGER},
      </if>
      <if test="tbcFlag != null" >
        #{tbcFlag,jdbcType=VARCHAR},
      </if>
      <if test="tbcCount != null" >
        #{tbcCount,jdbcType=DOUBLE},
      </if>
      <if test="tbcValidity != null" >
        #{tbcValidity,jdbcType=TINYINT},
      </if>
      <if test="tbcBegin != null" >
        #{tbcBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcEnd != null" >
        #{tbcEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcUseTime != null" >
        #{tbcUseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcSerial != null" >
        #{tbcSerial,jdbcType=VARCHAR},
      </if>
      <if test="tbcOrder != null" >
        #{tbcOrder,jdbcType=BIGINT},
      </if>
      <if test="tbcLongOrder != null" >
        #{tbcLongOrder,jdbcType=BIGINT},
      </if>
      <if test="tbcData != null" >
        #{tbcData,jdbcType=VARCHAR},
      </if>
      <if test="tbcEditor != null" >
        #{tbcEditor,jdbcType=INTEGER},
      </if>
      <if test="tbcUpdateTime != null" >
        #{tbcUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcAddTime != null" >
        #{tbcAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcRemark != null" >
        #{tbcRemark,jdbcType=VARCHAR},
      </if>
      <if test="tbcTimeout != null" >
        #{tbcTimeout,jdbcType=TINYINT},
      </if>
      <if test="tbcUsed != null" >
        #{tbcUsed,jdbcType=TINYINT},
      </if>
      <if test="tbcStatus != null" >
        #{tbcStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zx.evpop.jdbc.entity.CouponExample" resultType="java.lang.Integer" >
    select count(*) from tb_coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_coupon
    <set >
      <if test="record.tbcId != null" >
        tbc_id = #{record.tbcId,jdbcType=INTEGER},
      </if>
      <if test="record.tbcHost != null" >
        tbc_host = #{record.tbcHost,jdbcType=SMALLINT},
      </if>
      <if test="record.tbcTitle != null" >
        tbc_title = #{record.tbcTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.tbcMember != null" >
        tbc_member = #{record.tbcMember,jdbcType=INTEGER},
      </if>
      <if test="record.tbcLimit != null" >
        tbc_limit = #{record.tbcLimit,jdbcType=TINYINT},
      </if>
      <if test="record.tbcMin != null" >
        tbc_min = #{record.tbcMin,jdbcType=DECIMAL},
      </if>
      <if test="record.tbcType != null" >
        tbc_type = #{record.tbcType,jdbcType=INTEGER},
      </if>
      <if test="record.tbcFlag != null" >
        tbc_flag = #{record.tbcFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.tbcCount != null" >
        tbc_count = #{record.tbcCount,jdbcType=DOUBLE},
      </if>
      <if test="record.tbcValidity != null" >
        tbc_validity = #{record.tbcValidity,jdbcType=TINYINT},
      </if>
      <if test="record.tbcBegin != null" >
        tbc_begin = #{record.tbcBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tbcEnd != null" >
        tbc_end = #{record.tbcEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tbcUseTime != null" >
        tbc_use_time = #{record.tbcUseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tbcSerial != null" >
        tbc_serial = #{record.tbcSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.tbcOrder != null" >
        tbc_order = #{record.tbcOrder,jdbcType=BIGINT},
      </if>
      <if test="record.tbcLongOrder != null" >
        tbc_long_order = #{record.tbcLongOrder,jdbcType=BIGINT},
      </if>
      <if test="record.tbcData != null" >
        tbc_data = #{record.tbcData,jdbcType=VARCHAR},
      </if>
      <if test="record.tbcEditor != null" >
        tbc_editor = #{record.tbcEditor,jdbcType=INTEGER},
      </if>
      <if test="record.tbcUpdateTime != null" >
        tbc_update_time = #{record.tbcUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tbcAddTime != null" >
        tbc_add_time = #{record.tbcAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tbcRemark != null" >
        tbc_remark = #{record.tbcRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.tbcTimeout != null" >
        tbc_timeout = #{record.tbcTimeout,jdbcType=TINYINT},
      </if>
      <if test="record.tbcUsed != null" >
        tbc_used = #{record.tbcUsed,jdbcType=TINYINT},
      </if>
      <if test="record.tbcStatus != null" >
        tbc_status = #{record.tbcStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_coupon
    set tbc_id = #{record.tbcId,jdbcType=INTEGER},
      tbc_host = #{record.tbcHost,jdbcType=SMALLINT},
      tbc_title = #{record.tbcTitle,jdbcType=VARCHAR},
      tbc_member = #{record.tbcMember,jdbcType=INTEGER},
      tbc_limit = #{record.tbcLimit,jdbcType=TINYINT},
      tbc_min = #{record.tbcMin,jdbcType=DECIMAL},
      tbc_type = #{record.tbcType,jdbcType=INTEGER},
      tbc_flag = #{record.tbcFlag,jdbcType=VARCHAR},
      tbc_count = #{record.tbcCount,jdbcType=DOUBLE},
      tbc_validity = #{record.tbcValidity,jdbcType=TINYINT},
      tbc_begin = #{record.tbcBegin,jdbcType=TIMESTAMP},
      tbc_end = #{record.tbcEnd,jdbcType=TIMESTAMP},
      tbc_use_time = #{record.tbcUseTime,jdbcType=TIMESTAMP},
      tbc_serial = #{record.tbcSerial,jdbcType=VARCHAR},
      tbc_order = #{record.tbcOrder,jdbcType=BIGINT},
      tbc_long_order = #{record.tbcLongOrder,jdbcType=BIGINT},
      tbc_data = #{record.tbcData,jdbcType=VARCHAR},
      tbc_editor = #{record.tbcEditor,jdbcType=INTEGER},
      tbc_update_time = #{record.tbcUpdateTime,jdbcType=TIMESTAMP},
      tbc_add_time = #{record.tbcAddTime,jdbcType=TIMESTAMP},
      tbc_remark = #{record.tbcRemark,jdbcType=VARCHAR},
      tbc_timeout = #{record.tbcTimeout,jdbcType=TINYINT},
      tbc_used = #{record.tbcUsed,jdbcType=TINYINT},
      tbc_status = #{record.tbcStatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zx.evpop.jdbc.entity.Coupon" >
    update tb_coupon
    <set >
      <if test="tbcHost != null" >
        tbc_host = #{tbcHost,jdbcType=SMALLINT},
      </if>
      <if test="tbcTitle != null" >
        tbc_title = #{tbcTitle,jdbcType=VARCHAR},
      </if>
      <if test="tbcMember != null" >
        tbc_member = #{tbcMember,jdbcType=INTEGER},
      </if>
      <if test="tbcLimit != null" >
        tbc_limit = #{tbcLimit,jdbcType=TINYINT},
      </if>
      <if test="tbcMin != null" >
        tbc_min = #{tbcMin,jdbcType=DECIMAL},
      </if>
      <if test="tbcType != null" >
        tbc_type = #{tbcType,jdbcType=INTEGER},
      </if>
      <if test="tbcFlag != null" >
        tbc_flag = #{tbcFlag,jdbcType=VARCHAR},
      </if>
      <if test="tbcCount != null" >
        tbc_count = #{tbcCount,jdbcType=DOUBLE},
      </if>
      <if test="tbcValidity != null" >
        tbc_validity = #{tbcValidity,jdbcType=TINYINT},
      </if>
      <if test="tbcBegin != null" >
        tbc_begin = #{tbcBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcEnd != null" >
        tbc_end = #{tbcEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcUseTime != null" >
        tbc_use_time = #{tbcUseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcSerial != null" >
        tbc_serial = #{tbcSerial,jdbcType=VARCHAR},
      </if>
      <if test="tbcOrder != null" >
        tbc_order = #{tbcOrder,jdbcType=BIGINT},
      </if>
      <if test="tbcLongOrder != null" >
        tbc_long_order = #{tbcLongOrder,jdbcType=BIGINT},
      </if>
      <if test="tbcData != null" >
        tbc_data = #{tbcData,jdbcType=VARCHAR},
      </if>
      <if test="tbcEditor != null" >
        tbc_editor = #{tbcEditor,jdbcType=INTEGER},
      </if>
      <if test="tbcUpdateTime != null" >
        tbc_update_time = #{tbcUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcAddTime != null" >
        tbc_add_time = #{tbcAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbcRemark != null" >
        tbc_remark = #{tbcRemark,jdbcType=VARCHAR},
      </if>
      <if test="tbcTimeout != null" >
        tbc_timeout = #{tbcTimeout,jdbcType=TINYINT},
      </if>
      <if test="tbcUsed != null" >
        tbc_used = #{tbcUsed,jdbcType=TINYINT},
      </if>
      <if test="tbcStatus != null" >
        tbc_status = #{tbcStatus,jdbcType=TINYINT},
      </if>
    </set>
    where tbc_id = #{tbcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zx.evpop.jdbc.entity.Coupon" >
    update tb_coupon
    set tbc_host = #{tbcHost,jdbcType=SMALLINT},
      tbc_title = #{tbcTitle,jdbcType=VARCHAR},
      tbc_member = #{tbcMember,jdbcType=INTEGER},
      tbc_limit = #{tbcLimit,jdbcType=TINYINT},
      tbc_min = #{tbcMin,jdbcType=DECIMAL},
      tbc_type = #{tbcType,jdbcType=INTEGER},
      tbc_flag = #{tbcFlag,jdbcType=VARCHAR},
      tbc_count = #{tbcCount,jdbcType=DOUBLE},
      tbc_validity = #{tbcValidity,jdbcType=TINYINT},
      tbc_begin = #{tbcBegin,jdbcType=TIMESTAMP},
      tbc_end = #{tbcEnd,jdbcType=TIMESTAMP},
      tbc_use_time = #{tbcUseTime,jdbcType=TIMESTAMP},
      tbc_serial = #{tbcSerial,jdbcType=VARCHAR},
      tbc_order = #{tbcOrder,jdbcType=BIGINT},
      tbc_long_order = #{tbcLongOrder,jdbcType=BIGINT},
      tbc_data = #{tbcData,jdbcType=VARCHAR},
      tbc_editor = #{tbcEditor,jdbcType=INTEGER},
      tbc_update_time = #{tbcUpdateTime,jdbcType=TIMESTAMP},
      tbc_add_time = #{tbcAddTime,jdbcType=TIMESTAMP},
      tbc_remark = #{tbcRemark,jdbcType=VARCHAR},
      tbc_timeout = #{tbcTimeout,jdbcType=TINYINT},
      tbc_used = #{tbcUsed,jdbcType=TINYINT},
      tbc_status = #{tbcStatus,jdbcType=TINYINT}
    where tbc_id = #{tbcId,jdbcType=INTEGER}
  </update>
</mapper>