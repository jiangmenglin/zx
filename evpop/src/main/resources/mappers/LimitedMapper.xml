<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zx.evpop.jdbc.dao.LimitedMapper" >
  <resultMap id="BaseResultMap" type="com.zx.evpop.jdbc.entity.Limited" >
    <id column="sl_id" property="slId" jdbcType="BIGINT" />
    <result column="sl_project" property="slProject" jdbcType="BIGINT" />
    <result column="sl_user" property="slUser" jdbcType="BIGINT" />
    <result column="sl_group" property="slGroup" jdbcType="BIGINT" />
    <result column="sl_limit" property="slLimit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sl_id, sl_project, sl_user, sl_group, sl_limit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zx.evpop.jdbc.entity.LimitedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from srv_limited
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from srv_limited
    where sl_id = #{slId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from srv_limited
    where sl_id = #{slId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zx.evpop.jdbc.entity.Limited" >
    insert into srv_limited (sl_id, sl_project, sl_user, 
      sl_group, sl_limit)
    values (#{slId,jdbcType=BIGINT}, #{slProject,jdbcType=BIGINT}, #{slUser,jdbcType=BIGINT}, 
      #{slGroup,jdbcType=BIGINT}, #{slLimit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zx.evpop.jdbc.entity.Limited" >
    insert into srv_limited
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="slId != null" >
        sl_id,
      </if>
      <if test="slProject != null" >
        sl_project,
      </if>
      <if test="slUser != null" >
        sl_user,
      </if>
      <if test="slGroup != null" >
        sl_group,
      </if>
      <if test="slLimit != null" >
        sl_limit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="slId != null" >
        #{slId,jdbcType=BIGINT},
      </if>
      <if test="slProject != null" >
        #{slProject,jdbcType=BIGINT},
      </if>
      <if test="slUser != null" >
        #{slUser,jdbcType=BIGINT},
      </if>
      <if test="slGroup != null" >
        #{slGroup,jdbcType=BIGINT},
      </if>
      <if test="slLimit != null" >
        #{slLimit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zx.evpop.jdbc.entity.LimitedExample" resultType="java.lang.Integer" >
    select count(*) from srv_limited
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update srv_limited
    <set >
      <if test="record.slId != null" >
        sl_id = #{record.slId,jdbcType=BIGINT},
      </if>
      <if test="record.slProject != null" >
        sl_project = #{record.slProject,jdbcType=BIGINT},
      </if>
      <if test="record.slUser != null" >
        sl_user = #{record.slUser,jdbcType=BIGINT},
      </if>
      <if test="record.slGroup != null" >
        sl_group = #{record.slGroup,jdbcType=BIGINT},
      </if>
      <if test="record.slLimit != null" >
        sl_limit = #{record.slLimit,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update srv_limited
    set sl_id = #{record.slId,jdbcType=BIGINT},
      sl_project = #{record.slProject,jdbcType=BIGINT},
      sl_user = #{record.slUser,jdbcType=BIGINT},
      sl_group = #{record.slGroup,jdbcType=BIGINT},
      sl_limit = #{record.slLimit,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zx.evpop.jdbc.entity.Limited" >
    update srv_limited
    <set >
      <if test="slProject != null" >
        sl_project = #{slProject,jdbcType=BIGINT},
      </if>
      <if test="slUser != null" >
        sl_user = #{slUser,jdbcType=BIGINT},
      </if>
      <if test="slGroup != null" >
        sl_group = #{slGroup,jdbcType=BIGINT},
      </if>
      <if test="slLimit != null" >
        sl_limit = #{slLimit,jdbcType=INTEGER},
      </if>
    </set>
    where sl_id = #{slId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zx.evpop.jdbc.entity.Limited" >
    update srv_limited
    set sl_project = #{slProject,jdbcType=BIGINT},
      sl_user = #{slUser,jdbcType=BIGINT},
      sl_group = #{slGroup,jdbcType=BIGINT},
      sl_limit = #{slLimit,jdbcType=INTEGER}
    where sl_id = #{slId,jdbcType=BIGINT}
  </update>
</mapper>