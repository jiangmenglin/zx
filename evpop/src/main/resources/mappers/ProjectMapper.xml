<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zx.evpop.jdbc.dao.ProjectMapper" >
  <resultMap id="BaseResultMap" type="com.zx.evpop.jdbc.entity.Project" >
    <id column="sp_id" property="spId" jdbcType="BIGINT" />
    <result column="sp_name" property="spName" jdbcType="VARCHAR" />
    <result column="sp_parent_id" property="spParentId" jdbcType="BIGINT" />
    <result column="sp_family" property="spFamily" jdbcType="VARCHAR" />
    <result column="sp_url" property="spUrl" jdbcType="VARCHAR" />
    <result column="sp_logo" property="spLogo" jdbcType="VARCHAR" />
    <result column="sp_descript" property="spDescript" jdbcType="VARCHAR" />
    <result column="sp_level" property="spLevel" jdbcType="INTEGER" />
    <result column="sp_limit_exp" property="spLimitExp" jdbcType="VARCHAR" />
    <result column="sp_group" property="spGroup" jdbcType="VARCHAR" />
    <result column="sp_status" property="spStatus" jdbcType="SMALLINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zx.evpop.jdbc.entity.Project" extends="BaseResultMap" >
    <result column="sp_mind" property="spMind" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sp_id, sp_name, sp_parent_id, sp_family, sp_url, sp_logo, sp_descript, sp_level, 
    sp_limit_exp, sp_group, sp_status
  </sql>
  <sql id="Blob_Column_List" >
    sp_mind
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zx.evpop.jdbc.entity.ProjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from srv_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zx.evpop.jdbc.entity.ProjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from srv_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from srv_project
    where sp_id = #{spId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from srv_project
    where sp_id = #{spId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zx.evpop.jdbc.entity.Project" >
    insert into srv_project (sp_id, sp_name, sp_parent_id, 
      sp_family, sp_url, sp_logo, 
      sp_descript, sp_level, sp_limit_exp, 
      sp_group, sp_status, sp_mind
      )
    values (#{spId,jdbcType=BIGINT}, #{spName,jdbcType=VARCHAR}, #{spParentId,jdbcType=BIGINT}, 
      #{spFamily,jdbcType=VARCHAR}, #{spUrl,jdbcType=VARCHAR}, #{spLogo,jdbcType=VARCHAR}, 
      #{spDescript,jdbcType=VARCHAR}, #{spLevel,jdbcType=INTEGER}, #{spLimitExp,jdbcType=VARCHAR}, 
      #{spGroup,jdbcType=VARCHAR}, #{spStatus,jdbcType=SMALLINT}, #{spMind,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zx.evpop.jdbc.entity.Project" >
    insert into srv_project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="spId != null" >
        sp_id,
      </if>
      <if test="spName != null" >
        sp_name,
      </if>
      <if test="spParentId != null" >
        sp_parent_id,
      </if>
      <if test="spFamily != null" >
        sp_family,
      </if>
      <if test="spUrl != null" >
        sp_url,
      </if>
      <if test="spLogo != null" >
        sp_logo,
      </if>
      <if test="spDescript != null" >
        sp_descript,
      </if>
      <if test="spLevel != null" >
        sp_level,
      </if>
      <if test="spLimitExp != null" >
        sp_limit_exp,
      </if>
      <if test="spGroup != null" >
        sp_group,
      </if>
      <if test="spStatus != null" >
        sp_status,
      </if>
      <if test="spMind != null" >
        sp_mind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="spId != null" >
        #{spId,jdbcType=BIGINT},
      </if>
      <if test="spName != null" >
        #{spName,jdbcType=VARCHAR},
      </if>
      <if test="spParentId != null" >
        #{spParentId,jdbcType=BIGINT},
      </if>
      <if test="spFamily != null" >
        #{spFamily,jdbcType=VARCHAR},
      </if>
      <if test="spUrl != null" >
        #{spUrl,jdbcType=VARCHAR},
      </if>
      <if test="spLogo != null" >
        #{spLogo,jdbcType=VARCHAR},
      </if>
      <if test="spDescript != null" >
        #{spDescript,jdbcType=VARCHAR},
      </if>
      <if test="spLevel != null" >
        #{spLevel,jdbcType=INTEGER},
      </if>
      <if test="spLimitExp != null" >
        #{spLimitExp,jdbcType=VARCHAR},
      </if>
      <if test="spGroup != null" >
        #{spGroup,jdbcType=VARCHAR},
      </if>
      <if test="spStatus != null" >
        #{spStatus,jdbcType=SMALLINT},
      </if>
      <if test="spMind != null" >
        #{spMind,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zx.evpop.jdbc.entity.ProjectExample" resultType="java.lang.Integer" >
    select count(*) from srv_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update srv_project
    <set >
      <if test="record.spId != null" >
        sp_id = #{record.spId,jdbcType=BIGINT},
      </if>
      <if test="record.spName != null" >
        sp_name = #{record.spName,jdbcType=VARCHAR},
      </if>
      <if test="record.spParentId != null" >
        sp_parent_id = #{record.spParentId,jdbcType=BIGINT},
      </if>
      <if test="record.spFamily != null" >
        sp_family = #{record.spFamily,jdbcType=VARCHAR},
      </if>
      <if test="record.spUrl != null" >
        sp_url = #{record.spUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.spLogo != null" >
        sp_logo = #{record.spLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.spDescript != null" >
        sp_descript = #{record.spDescript,jdbcType=VARCHAR},
      </if>
      <if test="record.spLevel != null" >
        sp_level = #{record.spLevel,jdbcType=INTEGER},
      </if>
      <if test="record.spLimitExp != null" >
        sp_limit_exp = #{record.spLimitExp,jdbcType=VARCHAR},
      </if>
      <if test="record.spGroup != null" >
        sp_group = #{record.spGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.spStatus != null" >
        sp_status = #{record.spStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.spMind != null" >
        sp_mind = #{record.spMind,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update srv_project
    set sp_id = #{record.spId,jdbcType=BIGINT},
      sp_name = #{record.spName,jdbcType=VARCHAR},
      sp_parent_id = #{record.spParentId,jdbcType=BIGINT},
      sp_family = #{record.spFamily,jdbcType=VARCHAR},
      sp_url = #{record.spUrl,jdbcType=VARCHAR},
      sp_logo = #{record.spLogo,jdbcType=VARCHAR},
      sp_descript = #{record.spDescript,jdbcType=VARCHAR},
      sp_level = #{record.spLevel,jdbcType=INTEGER},
      sp_limit_exp = #{record.spLimitExp,jdbcType=VARCHAR},
      sp_group = #{record.spGroup,jdbcType=VARCHAR},
      sp_status = #{record.spStatus,jdbcType=SMALLINT},
      sp_mind = #{record.spMind,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update srv_project
    set sp_id = #{record.spId,jdbcType=BIGINT},
      sp_name = #{record.spName,jdbcType=VARCHAR},
      sp_parent_id = #{record.spParentId,jdbcType=BIGINT},
      sp_family = #{record.spFamily,jdbcType=VARCHAR},
      sp_url = #{record.spUrl,jdbcType=VARCHAR},
      sp_logo = #{record.spLogo,jdbcType=VARCHAR},
      sp_descript = #{record.spDescript,jdbcType=VARCHAR},
      sp_level = #{record.spLevel,jdbcType=INTEGER},
      sp_limit_exp = #{record.spLimitExp,jdbcType=VARCHAR},
      sp_group = #{record.spGroup,jdbcType=VARCHAR},
      sp_status = #{record.spStatus,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zx.evpop.jdbc.entity.Project" >
    update srv_project
    <set >
      <if test="spName != null" >
        sp_name = #{spName,jdbcType=VARCHAR},
      </if>
      <if test="spParentId != null" >
        sp_parent_id = #{spParentId,jdbcType=BIGINT},
      </if>
      <if test="spFamily != null" >
        sp_family = #{spFamily,jdbcType=VARCHAR},
      </if>
      <if test="spUrl != null" >
        sp_url = #{spUrl,jdbcType=VARCHAR},
      </if>
      <if test="spLogo != null" >
        sp_logo = #{spLogo,jdbcType=VARCHAR},
      </if>
      <if test="spDescript != null" >
        sp_descript = #{spDescript,jdbcType=VARCHAR},
      </if>
      <if test="spLevel != null" >
        sp_level = #{spLevel,jdbcType=INTEGER},
      </if>
      <if test="spLimitExp != null" >
        sp_limit_exp = #{spLimitExp,jdbcType=VARCHAR},
      </if>
      <if test="spGroup != null" >
        sp_group = #{spGroup,jdbcType=VARCHAR},
      </if>
      <if test="spStatus != null" >
        sp_status = #{spStatus,jdbcType=SMALLINT},
      </if>
      <if test="spMind != null" >
        sp_mind = #{spMind,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where sp_id = #{spId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zx.evpop.jdbc.entity.Project" >
    update srv_project
    set sp_name = #{spName,jdbcType=VARCHAR},
      sp_parent_id = #{spParentId,jdbcType=BIGINT},
      sp_family = #{spFamily,jdbcType=VARCHAR},
      sp_url = #{spUrl,jdbcType=VARCHAR},
      sp_logo = #{spLogo,jdbcType=VARCHAR},
      sp_descript = #{spDescript,jdbcType=VARCHAR},
      sp_level = #{spLevel,jdbcType=INTEGER},
      sp_limit_exp = #{spLimitExp,jdbcType=VARCHAR},
      sp_group = #{spGroup,jdbcType=VARCHAR},
      sp_status = #{spStatus,jdbcType=SMALLINT},
      sp_mind = #{spMind,jdbcType=LONGVARCHAR}
    where sp_id = #{spId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zx.evpop.jdbc.entity.Project" >
    update srv_project
    set sp_name = #{spName,jdbcType=VARCHAR},
      sp_parent_id = #{spParentId,jdbcType=BIGINT},
      sp_family = #{spFamily,jdbcType=VARCHAR},
      sp_url = #{spUrl,jdbcType=VARCHAR},
      sp_logo = #{spLogo,jdbcType=VARCHAR},
      sp_descript = #{spDescript,jdbcType=VARCHAR},
      sp_level = #{spLevel,jdbcType=INTEGER},
      sp_limit_exp = #{spLimitExp,jdbcType=VARCHAR},
      sp_group = #{spGroup,jdbcType=VARCHAR},
      sp_status = #{spStatus,jdbcType=SMALLINT}
    where sp_id = #{spId,jdbcType=BIGINT}
  </update>
</mapper>